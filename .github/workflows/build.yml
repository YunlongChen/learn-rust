name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ windows-latest ]
        BUILD_TARGET: [ release ]
    outputs:
      release_built: ${{ steps.set-output.outputs.release_built }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Temporarily modify the rust toolchain version
        run: rustup override set stable
      - name: Output rust version for educational purposes
        run: rustup --version

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: CheckOut
        uses: actions/checkout@v4
      #      - name: Build binaries in "${{ matrix.BUILD_TARGET }}" mode
      #        run: cargo build -p domain_manager --profile ${{ matrix.BUILD_TARGET }}
      - name: Run check in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo check -p domain_manager
      - name: Run tests in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo test -p domain_manager
